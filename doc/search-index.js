var searchIndex = {};
searchIndex['jlens'] = {"items":[[0,"","jlens","Extract data from JSON"],[1,"Path","","JSON node path"],[1,"Node","",""],[11,"_dummy","","",0],[1,"Object","",""],[11,"inner","","",1],[1,"List","",""],[11,"inner","","",2],[1,"String","",""],[11,"inner","","",3],[1,"StringEquals","",""],[11,"inner","","",4],[11,"comp","","",4],[1,"Boolean","",""],[11,"inner","","",5],[1,"BooleanEquals","",""],[11,"inner","","",6],[11,"comp","","",6],[1,"Number","",""],[11,"inner","","",7],[1,"NumberEquals","",""],[11,"inner","","",8],[11,"comp","","",8],[1,"At","",""],[11,"inner","","",9],[11,"index","","",9],[1,"Key","",""],[11,"inner","","",10],[11,"name","","",10],[1,"Child","",""],[11,"inner","","",11],[1,"Parent","",""],[11,"inner","","",12],[1,"Descend","",""],[11,"inner","","",13],[1,"Ascend","",""],[11,"inner","","",14],[1,"Where","",""],[11,"inner","","",15],[11,"filter","","",15],[1,"Union","",""],[11,"inner","","",16],[11,"left","","",16],[11,"right","","",16],[1,"Intersect","",""],[11,"inner","","",17],[11,"left","","",17],[11,"right","","",17],[1,"Diff","",""],[11,"inner","","",18],[11,"left","","",18],[11,"right","","",18],[1,"And","",""],[11,"inner","","",19],[11,"left","","",19],[11,"right","","",19],[1,"Or","",""],[11,"inner","","",20],[11,"left","","",20],[11,"right","","",20],[3,"node","","Create trivial selector"],[3,"boolean","","Shorthand for `node().boolean()`"],[3,"number","","Shorthand for `node().number()`"],[3,"string","","Shorthand for `node().string()`"],[3,"object","","Shorthand for `node().object()`"],[3,"list","","Shorthand for `node().list()`"],[3,"child","","Shorthand for `node().child()`"],[3,"parent","","Shorthand for `node().parent()`"],[3,"descend","","Shorthand for `node().descend()`"],[3,"ascend","","Shorthand for `node().ascend()`"],[3,"at","","Shorthand for `node().at(index)`"],[3,"key","","Shorthand for `node().key(name)`"],[3,"where","","Shorthand for `node().where(filter)`"],[3,"intersect","","Shorthand for `node().intersect(left, right)`"],[3,"union","","Shorthand for `node().union(left, right)`"],[3,"diff","","Shorthand for `node().diff(left, right)`"],[3,"and","","Shorthand for `node().and(left, right)`"],[3,"or","","Shorthand for `node().or(left, right)`"],[6,"Selector","","JSON selector trait"],[9,"select","","Select matching nodes",21],[10,"boolean","","Select current node if it is a `json::Boolean`",21],[10,"number","","Select current node if it is a `json::Number`",21],[10,"string","","Select current node if it is a `json::String`",21],[10,"object","","Select current node if it is a `json::Object`",21],[10,"list","","Select current node if it is a `json::List`",21],[10,"at","","Select list element",21],[10,"key","","Select object value for key",21],[10,"child","","Select children of current node",21],[10,"parent","","Select parent of current node if it is not the root",21],[10,"descend","","Select descendents of current node",21],[10,"ascend","","Select ancestors of current node",21],[10,"where","","Select current node based on filter",21],[10,"union","","Select union of two selectors",21],[10,"intersect","","Select intersection of two selectors",21],[10,"diff","","Select symmetric difference of two selectors",21],[10,"and","","Select logical-and of two selectors",21],[10,"or","","Select logical-or of two selectors",21],[6,"JsonExt","","Extension trait for `Json`"],[9,"query","","Run query",22],[10,"select","","",0],[10,"select","","",1],[10,"select","","",2],[10,"equals","","Select current `json::String` node if it is equal to `comp`",3],[10,"select","","",3],[10,"select","","",4],[10,"equals","","Select current `json::Boolean` node if it is equal to `comp`",5],[10,"select","","",5],[10,"select","","",6],[10,"equals","","",7],[10,"select","","Select current `json::Number` node if it is equal to `comp`",7],[10,"select","","",8],[10,"select","","",9],[10,"select","","",10],[10,"select","","",11],[10,"select","","",12],[10,"select","","",13],[10,"select","","",14],[10,"select","","",15],[10,"select","","",16],[10,"select","","",17],[10,"select","","",18],[10,"select","","",19],[10,"select","","",20],[10,"query","serialize::json","",23]],"paths":[[1,"Node"],[1,"Object"],[1,"List"],[1,"String"],[1,"StringEquals"],[1,"Boolean"],[1,"BooleanEquals"],[1,"Number"],[1,"NumberEquals"],[1,"At"],[1,"Key"],[1,"Child"],[1,"Parent"],[1,"Descend"],[1,"Ascend"],[1,"Where"],[1,"Union"],[1,"Intersect"],[1,"Diff"],[1,"And"],[1,"Or"],[6,"Selector"],[6,"JsonExt"],[2,"Json"]]};
initSearch(searchIndex);
